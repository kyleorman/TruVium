# Fill out, rename file to git_setup.conf, and place in main TruVium directory
# Run with command: ./git_setup.sh --config-file git_setup.conf --non-interactive
########################################
#            GIT CONFIGURATION         #
########################################

# User Information
# These settings ensure your commits are properly attributed.
GIT_NAME="Your Name"
GIT_EMAIL="your.email@example.com"


# Editor Configuration
# Sets the default editor for Git (e.g., Visual Studio Code).
# You can customize this to your preferred editor like vim or nano.
GIT_EDITOR="code --wait"


# Git Output and Line Endings
# Enabling colored output makes Git commands easier to read.
# Set line endings to "unix" for macOS/Linux or "windows" for Windows.
LINE_END_CHOICE="unix"


########################################
#              ALIASES                 #
########################################

# Speed up your Git workflow by defining common Git aliases.
[alias]
    st = status
    co = checkout
    br = branch
    ci = commit


########################################
#              BEHAVIOR                #
########################################

# Set push.default to "simple" for safer push behavior.
push.default=simple

# A global .gitignore prevents committing unnecessary files.
# Customize this to match your project's needs.

# Automatically stash local changes when rebasing to avoid conflicts.
[rebase]
    autoStash = true


########################################
#            MERGE TOOL                #
########################################

# Set a visual merge tool like "meld" to simplify resolving merge conflicts.
MERGE_TOOL_CHOICE="meld"


########################################
#       PERFORMANCE OPTIMIZATION       #
########################################

# Enable performance optimizations, especially in large repositories.
[core]
    fsmonitor = true


########################################
#         CREDENTIAL HELPER            #
########################################

# Cache your credentials for a set period to avoid retyping them frequently.
# For macOS, use "osxkeychain"; for Windows, use "wincred".
[credential]
    helper = cache


########################################
#             PAGER SETTINGS           #
########################################

# Customize Git's pager behavior for better output display (e.g., git log).
[pager]
    log = less


########################################
#     COMMIT MESSAGE TEMPLATE          #
########################################

# Use a template to structure your commit messages consistently.
COMMIT_TEMPLATE="path/to/commit/template.txt"


########################################
#        SSH KEY GENERATION            #
########################################

# Generate an SSH key (ed25519 is recommended for better security).
[ssh]
    keyType = ed25519


########################################
#       ADDITIONAL PACKAGES            #
########################################

# Install Git Large File Storage (git-lfs) for handling large files.
[package]
    install = git-lfs


########################################
#             LOGGING                  #
########################################

# Enable logging to track the script's actions.
[log]
    enable = true


########################################
#          DRY-RUN MODE                #
########################################

# Run the script in dry-run mode to simulate changes without making them.
[dry-run]
    mode = no


########################################
#         INTERACTIVE MODE             #
########################################

# Set to "no" to disable interactive prompts when running the script.
[interactive]
    mode = no

