########################################################################
#                            Tmux Configuration                        #
########################################################################

# ######################################################################
#                               Prefix Setup                           #
# ######################################################################

# Unbind the default prefix (Ctrl-b) and set new prefix to Ctrl-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# ######################################################################
#                            Plugin Management                        #
# ######################################################################

# List of Plugins Managed by TPM
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'

# Plugin-specific Settings
set -g @resurrect-save 'on'
set -g @resurrect-restore 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @yank_paste 'true'

# ######################################################################
#                           Pane Navigation                           #
# ######################################################################

# Smart pane navigation with Vim, fzf, and pane type awareness
bind -n C-h run "bash $HOME/.tmux_keys.sh h"
bind -n C-j run "bash $HOME/.tmux_keys.sh j"
bind -n C-k run "bash $HOME/.tmux_keys.sh k"
bind -n C-l run "bash $HOME/.tmux_keys.sh l"
bind-key -n C-\\ run "bash $HOME/.tmux_keys.sh C-\\"

# Optional Shift + Arrow Key navigation
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# Conditional Keybinding for Ctrl-\
if-shell 'tmux -V | grep -E "^tmux 3\.[2-9]+(\.[0-9]+)*$"' \
  'bind-key C-\\ split-window -h' \
  'bind-key C-\\ split-window -v'

# ######################################################################
#                           Copy-Mode Navigation                     #
# ######################################################################

# Enable vi mode in copy-mode
setw -g mode-keys vi

# Bind copy-mode keys for pane navigation
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Bind mouse drag end to copy to clipboard using xclip
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -selection clipboard -i"


# ######################################################################
#                      Clipboard Integration                          #
# ######################################################################

# Check if the system is macOS (Darwin) or Linux and bind clipboard keys accordingly
# if-shell 'uname | grep -q Darwin' \
    # 'if-shell "command -v pbcopy >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel pbcopy\"; bind -n C-v run \"tmux set-buffer \\\"$(pbpaste)\\\"; tmux paste-buffer\"" "display-message \"pbcopy not found\""' \
    # 'if-shell "command -v xsel >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel xsel -selection clipboard -i\"; bind -n C-v run \"tmux set-buffer \\\"$(xsel -selection clipboard -o)\\\"; tmux paste-buffer\"" "display-message \"xsel not found\""'
    #'if-shell "command -v xclip >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel xclip -selection clipboard -i\"; bind -n C-v run \"tmux set-buffer \\\"$(xclip -selection clipboard -o)\\\"; tmux paste-buffer\"" "display-message \"xclip not found\""'

if-shell '[ "$(tmux -V | cut -d " " -f 2)" >= "3.3" ]' \
  "set-window-option -g allow-passthrough on"

# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'

# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh

# ######################################################################
#                        Window Splitting                             #
# ######################################################################

# Window Splitting with Current Path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# ######################################################################
#                           Mouse and History                          #
# ######################################################################

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Set scrollback buffer size to 5,000 lines to optimize memory
set -g history-limit 5000

# ######################################################################
#                           Status Bar                                #
# ######################################################################

# Pane Borders
set -g pane-border-style fg=blue,bold
set -g pane-active-border-style fg=green,bold

# Window Status
set -g window-status-style fg=magenta,bold
setw -g window-status-format "#I: #W"
setw -g window-status-current-format "#I: #W"

# Status Bar Colors and Lengths (these won't affect Vim)
set-option -g status-bg black
set-option -g status-fg magenta
set-option -g status-left-length 40
set-option -g status-right-length 40

# Customize status-left to display session name
set -g status-left '#[fg=green]#S #[fg=yellow]| '

# Customize status-right to display date, time, CPU, and Battery
if-shell 'uname | grep -q Darwin' \
    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -l 1 | grep \"CPU usage\" | awk \047{print $3 + $5\"%\"}\047) #[fg=yellow]| Battery: #(pmset -g batt | grep -Eo \"[0-9]+%\")%"' \
    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -bn1 | grep \"Cpu(s)\" | sed \"s/.*, *\\([0-9.]*\\)%* id.*/\\1/\" | awk \047{print 100 - $1\"%\"}\047) #[fg=yellow]| Battery: #(acpi -b | grep -P -o \"[0-9]+(?=%)\")%"'

# ######################################################################
#                           Color Settings                            #
# ######################################################################

# Ensure 256-color support
set -g default-terminal "xterm-256color"

# Disable tmux color handling for Vim to prevent conflicts
set -g terminal-overrides '*256col*:Tc'

# ######################################################################
#                        Synchronize Panes                            #
# ######################################################################

# Sync panes with feedback
bind S setw synchronize-panes \; display-message "Pane synchronization #{?pane_synchronized,ON,OFF}"

# ######################################################################
#                       Configuration Reload                          #
# ######################################################################

# Reload tmux configuration with <prefix> r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Initialize TMUX Plugin Manager (TPM)
run '~/.tmux/plugins/tpm/tpm'
