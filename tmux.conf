########################################################################
#                            Tmux Configuration                        #
########################################################################

# ######################################################################
#                               Prefix Setup                           #
# ######################################################################

# Unbind the default prefix (Ctrl-b) and set new prefix to Alt-1 or ESC-1
unbind C-b
set-option -g prefix M-1
bind-key M-1 send-prefix

# ######################################################################
#                            Plugin Management                         #
# ######################################################################

# List of Plugins Managed by TPM
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat' # Depreciated due to native support
set -g @plugin 'tmux-plugins/tmux-open'
#set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'omerxx/tmux-floax'
set -g @plugin 'sainnhe/tmux-fzf' # Requires bash, sed, fzf, copyq
set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'tmux-plugins/tmux-logging'
#set -g @plugin 'yardnsm/tmux-1password' # Requires 1Password CLI
#set -g @plugin 'rickstaa/tmux-notify' # Requires notify-send or osascript
#set -g @plugin 'nhdaly/tmux-better-mouse-mode'
#set -g @plugin 'tmux-plugins/tmux-net-speed'
#set -g @plugin 'tmux-plugins/tmux-sessionist'
# Consider GITMUX

# ######################################################################
#                      General Settings                                #
# ######################################################################

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
bind-key C-t run-shell "tmux-popup 'tmux-open-session' 100"
# ######################################################################
#                 Resurrect and Continuum Settings                     #
# ######################################################################

set -g @resurrect-save 'on'
set -g @resurrect-restore 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @yank_paste 'true'
set -g @resurrect-strategy-vim 'session'
#set -g @resurrect-strategy-nvim 'session'

set -g @resurrect-save-binding 'S'
set -g @resurrect-restore-binding 'R'
#set -g @resurrect-save 'S'
#set -g @resurrect-restore 'R'

# ######################################################################
#                           Pane Navigation                            #
# ######################################################################

# Smart pane navigation with Vim, fzf, and pane type awareness
bind -n C-h run "bash $HOME/.tmux_keys.sh h"
bind -n C-j run "bash $HOME/.tmux_keys.sh j"
bind -n C-k run "bash $HOME/.tmux_keys.sh k"
bind -n C-l run "bash $HOME/.tmux_keys.sh l"
bind-key -n C-\\ run "bash $HOME/.tmux_keys.sh 'C-\\'"

# Optional Shift + Arrow Key navigation
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# Conditional Keybinding for Ctrl-\
if-shell 'tmux -V | grep -E "^tmux 3\.[2-9]+(\.[0-9]+)*$"' \
  'bind-key C-\\ split-window -h' \
  'bind-key C-\\ split-window -v'

# ######################################################################
#                           Copy-Mode Navigation                       #
# ######################################################################

# Enable vi mode in copy-mode
setw -g mode-keys vi

# Bind copy-mode keys for pane navigation
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Bind mouse drag end to copy to clipboard using xclip
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -selection clipboard -i"

# ######################################################################
#                      Sync Panes Settings                             #
# ######################################################################

# Prefix M-s to allow mirrored input on all panes
bind M-s set-window-option synchronize-panes

# ######################################################################
#                      TMUX Open Settings                              #
# ######################################################################

# Change keybinds
set -g @open 'o'
set -g @open-editor 'C-o'

set -g @open-S 'https://www.duckduckgo.com/?q='
#set -g @open-B 'https://www.bing.com/search?q='
#set -g @open-S 'https://www.google.com/search?q='

# ######################################################################
#                      Clipboard Integration                           #
# ######################################################################

# Check if the system is macOS (Darwin) or Linux and bind clipboard keys accordingly
# if-shell 'uname | grep -q Darwin' \
    # 'if-shell "command -v pbcopy >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel pbcopy\"; bind -n C-v run \"tmux set-buffer \\\"$(pbpaste)\\\"; tmux paste-buffer\"" "display-message \"pbcopy not found\""' \
    # 'if-shell "command -v xsel >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel xsel -selection clipboard -i\"; bind -n C-v run \"tmux set-buffer \\\"$(xsel -selection clipboard -o)\\\"; tmux paste-buffer\"" "display-message \"xsel not found\""'
    #'if-shell "command -v xclip >/dev/null 2>&1" "bind -n C-c run \"tmux send-keys -X copy-pipe-and-cancel xclip -selection clipboard -i\"; bind -n C-v run \"tmux set-buffer \\\"$(xclip -selection clipboard -o)\\\"; tmux paste-buffer\"" "display-message \"xclip not found\""'

if-shell '[ "$(tmux -V | cut -d " " -f 2)" >= "3.3" ]' \
  "set-window-option -g allow-passthrough on"
  
# ######################################################################
#                      Tmux-Yank Settings                              #
# ######################################################################

# Automatically copy to clipboard on yank
# This setting is useful if you're using an OS that supports clipboard integration (like macOS or Linux with xclip/xsel).
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary' Yank to clipboard with `y` in copy-mode (default binding is 'Enter')
#set -g @yank_with_mouse off # or 'on'
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard -i"

#set -g @custom_copy_command 'my-clipboard-copy --some-arg'
# or
#set -g @override_copy_command 'my-clipboard-copy --some-arg'

# ######################################################################
#                      Sidebar Settiings                               #
# ######################################################################

# Run a custom command in the sidebar instead of the default `tree` command.
# The example below runs `ls -l` in the sidebar.
#set -g @sidebar-tree-command 'ls -a'

# Move the sidebar to the right side of the terminal window (default is left).
#set -g @sidebar-tree-position 'right'

# Change the default keybinding for showing the sidebar from 'prefix + Tab' to 'prefix + e'.
set -g @sidebar-tree 'e'

# Change the default keybinding for focusing the tree sidebar from 'prefix + Backspace' to 'prefix + w'.
#set -g @sidebar-tree-focus 'w'

# Use `view` as the pager instead of the default `less`.
#set -g @sidebar-tree-pager 'view -'

# Change the default sidebar width from 40 columns to 60 columns.
#set -g @sidebar-tree-width '60'

# Use the `tree` command with color output (the `-C` flag enables color).
set -g @sidebar-tree-command 'tree -C'

# ######################################################################
#                      Copycat Settiings                               #
# ######################################################################

# Define the key-binding used (after prefix) to start an interactive search - Default is `/`
#set -g @copycat_search '/'

# Define the key (without prefix) used to jump to the next search result - Default is `n`
#set -g @copycat_next 'n'

# Define the key (without prefix) used to jump to the previous search result - Default is `N`
#set -g @copycat_prev 'N'

# Git status search - Default is `C-g` (Ctrl-g)
#set -g @copycat_git_special 'C-g'

# File search - Default is `C-f` (Ctrl-f)
#set -g @copycat_file_search 'C-f'

# URL search - Default is `C-u` (Ctrl-u)
#set -g @copycat_url_search 'C-u'

# Digit search - Default is `C-d` (Ctrl-d)
#set -g @copycat_digit_search 'C-d'

# SHA-1 Hash search - Default is `M-h` (Alt-h)
#set -g @copycat_hash_search 'M-h'

# IP address search - Default is `M-i` (Alt-i)
#set -g @copycat_ip_search 'M-i'

# Example of how to remap file search to `C-t` (Ctrl-t)
#set -g @copycat_file_search 'C-t'

# ######################################################################
#                      FZF Settiings                                   #
# ######################################################################

# Enable a custom menu
set-environment -g TMUX_FZF_MENU=\
"foo\necho 'Hello!'\n"\
"bar\nls ~\n"\
"sh\nsh ~/test.sh\n"

# Key binding for launching fzf in Tmux.
# Default is prefix + C-F (Ctrl+F)
# You can change it by uncommenting and modifying the keybinding
#set-environment -g TMUX_FZF_LAUNCH_KEY="M-f"
bind-key -n M-f run-shell "~/.tmux/plugins/tmux-fzf/main.sh"

# Fzf behavior options.
# This reads fzf environment variables and allows customizing the behavior of fzf.
# The following is the default value for Tmux versions less than 3.2
#set -g TMUX_FZF_OPTIONS="--m"

# For Tmux versions 3.2 and above, you can customize the appearance of fzf with options like width and height:
set-environment -g TMUX_FZF_OPTIONS="-p -w 62% -h 38% -m"

# To list all available options of fzf-tmux, you can run the following command:
# ~/.tmux/plugins/tmux-fzf/scripts/.fzf-tmux --help

# Preview window.
# Preview is enabled by default, but you can disable it by setting this to 0.
#set -g TMUX_FZF_PREVIEW=0

# By default, the preview window will try to follow the content (based on fzf behavior).
# You can disable this behavior by setting the following variable:
#set -g TMUX_FZF_PREVIEW_FOLLOW=0

# Customize the order of actions within fzf (e.g., session, window, pane, etc.).
# The following is the default order:
#set -g TMUX_FZF_ORDER="session|window|pane|command|keybinding|clipboard|process"

# You can remove unwanted features by deleting them from the order.
# For example, to disable clipboard and process:
#set -g TMUX_FZF_ORDER="session|window|pane|command|keybinding"

# Format of fzf output for panes, windows, and sessions.
# These formats can be customized using these variables:
#set -g TMUX_FZF_PANE_FORMAT
#set -g TMUX_FZF_WINDOW_FORMAT
#set -g TMUX_FZF_SESSION_FORMAT

# Example: Customize the format to show running program and window name for panes.
# Uncomment and modify to suit your needs:
#set -g TMUX_FZF_PANE_FORMAT="#{window_name} #{pane_current_command} [#{pane_width}x#{pane_height}]"

# To switch to the current session, window, and pane that is not listed by default, set the following:
#set -g TMUX_FZF_SWITCH_CURRENT=1

# ######################################################################
#                      Shell Settiings                                 #
# ######################################################################

#set-option -g default-shell /usr/bin/zsh
#set-option -g default-command "exec /usr/bin/zsh -l"

set-option -g default-shell "$SHELL"
set-option -g default-command "$SHELL -l"

# ######################################################################
#                        Window Splitting                              #
# ######################################################################

# Window Splitting with Current Path
bind s split-window -h -c "#{pane_current_path}"
bind d split-window -v -c "#{pane_current_path}"

# ######################################################################
#                           Mouse and History                          #
# ######################################################################

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Set scrollback buffer size to 5,000 lines to optimize memory
set -g history-limit 10000

# ######################################################################
#                           Floax Settings                             #
# ######################################################################

# Setting the main key to toggle the floating pane on and off
#set -g @floax-bind '<my-key>'
# M- means "hold Meta/Alt"
set -g @floax-bind '-n M-\'

# When the pane is toggled, using this bind pops a menu with additional options
# such as resize, fullscreen, resetting to defaults and more.
set -g @floax-bind-menu 'P'

# The default width and height of the floating pane
set -g @floax-width '80%'
set -g @floax-height '80%'

# The border color can be changed, these are the colors supported by Tmux:
# black, red, green, yellow, blue, magenta, cyan, white for the standard
# terminal colors; brightred, brightyellow and so on for the bright variants;
# colour0/color0 to colour255/color255 for the colors from the 256-color
# palette; default for the default color; or a hexadecimal RGB color such as #882244.
set -g @floax-border-color 'magenta'

# The text color can also be changed, by default it's blue 
# to distinguish from the main window
# Optional colors are as shown above in @floax-border-color
set -g @floax-text-color 'blue'

# By default when floax sees a change in session path 
# it'll change the floating pane's path
# You can disable this by setting it to false
# You could also "cd -" when the pane is toggled to go back
set -g @floax-change-path 'true'

# The default session name of the floating pane is 'scratch'
# You can modify the session name with this option:
#set -g @floax-session-name 'some-other-session-name'

# ######################################################################
#                           Status Bar                                 #
# ######################################################################

# Pane Borders
set -g pane-border-style fg=blue,bold
set -g pane-active-border-style fg=green,bold

# Window Status
set -g window-status-style fg=magenta,bold
setw -g window-status-format "#I: #W"
setw -g window-status-current-format "#I: #W"

# Toggle status bar display with M-. -- could be better
bind-key M-. set -g status

# Status Bar Colors and Lengths (these won't affect Vim)
set-option -g status-bg black
set-option -g status-fg magenta
set-option -g status-left-length 40
set-option -g status-right-length 40

# Customize status-left to display session name
set -g status-left '#[fg=green]#S #[fg=yellow]| #{prefix_highlight} '

# Customize status-right to display date, time, CPU, and Battery
#if-shell 'uname | grep -q Darwin' \
#    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -l 1 | grep \"CPU usage\" | awk \047{print $3 + $5\"%\"}\047) #[fg=yellow]| Battery: #(pmset -g batt | grep -Eo \"[0-9]+%\")%"' \
#    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -bn1 | grep \"Cpu(s)\" | sed \"s/.*, *\\([0-9.]*\\)%* id.*/\\1/\" | awk \047{print 100 - $1\"%\"}\047) #[fg=yellow]| Battery: #(acpi -b | grep -P -o \"[0-9]+(?=%)\")%"'

# Customize status-right to display date, time, and CPU
if-shell 'uname | grep -q Darwin' \
    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -l 1 | grep \"CPU usage\" | awk \047{print $3 + $5\"%\"}\047) #[fg=yellow]"' \
    'set -g status-right "#[fg=cyan]%Y-%m-%d #[fg=yellow]| #[fg=cyan]%H:%M:%S #[fg=green]| CPU: #(top -bn1 | grep \"Cpu(s)\" | sed \"s/.*, *\\([0-9.]*\\)%* id.*/\\1/\" | awk \047{print 100 - $1\"%\"}\047) #[fg=yellow]"'

# ######################################################################
#                           Prefix Highlight Settings                  #
# ######################################################################

# Copy mode status
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=red,bold' # default is 'fg=default,bg=yellow'

# Sync mode status
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green,bold' # default is 'fg=default,bg=yellow'

# Prefix mode status
set -g @prefix_highlight_output_prefix ' PREFIX ACTIVE '
# set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_fg 'black,bold' # default is 'colour231'
set -g @prefix_highlight_bg 'magenta'  # default is 'colour04'
#set -g @prefix_highlight_empty_prompt '        '          # default is '' (empty char)
#set -g @prefix_highlight_empty_attr 'fg=default,bg=green' # default is 'fg=default,bg=default'

# ######################################################################
#                           Color Settings                             #
# ######################################################################

# Ensure 256-color support
set -g default-terminal "tmux-256color"

# Disable tmux color handling for Vim to prevent conflicts
#set -g terminal-overrides '*256col*:Tc'

# This tells tmux to enable full colors if TERM outside is xterm-256color
set-option -g terminal-overrides ",xterm-256color:RGB"

# ######################################################################
#                        Synchronize Panes                             #
# ######################################################################

# Sync panes with feedback
# bind S setw synchronize-panes \; display-message "Pane synchronization #{?pane_synchronized,ON,OFF}"

# ######################################################################
#                       Environment Variables                          #
# ######################################################################
set-environment -g DISPLAY "localhost:10.0"
set-environment -g EDITOR "gvim"

# ######################################################################
#                       Configuration Reload                           #
# ######################################################################

# Reload tmux configuration with <prefix> r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Initialize TMUX Plugin Manager (TPM)
run '~/.tmux/plugins/tpm/tpm'
