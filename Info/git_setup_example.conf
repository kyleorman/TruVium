# git_setup.conf
# Fill out and run with command: ./git_setup.sh --config-file git_setup.conf --non-interactive


# -----------------------------
# User Information
# -----------------------------

# Set your Git user name
GIT_NAME="Your Name"

# Set your Git user email
GIT_EMAIL="your.email@example.com"

# -----------------------------
# Editor Configuration
# -----------------------------

# Preferred Git editor (vim, nano, code --wait, emacs, etc.)
GIT_EDITOR="code --wait"

# -----------------------------
# Git Output and Line Endings
# -----------------------------

# Enable colored Git output
ENABLE_COLOR_UI="yes"

# Configure line ending handling
CONFIGURE_LINE_ENDINGS="yes"
# Set line ending choice: 'windows' for CRLF, 'unix' for LF
LINE_END_CHOICE="unix"

# -----------------------------
# Git Behavior and Aliases
# -----------------------------

# Set default push behavior to 'simple'
SET_PUSH_BEHAVIOR="yes"

# Set up common Git aliases
SET_GIT_ALIASES="yes"
# Define custom Git aliases (comma-separated list)
GIT_ALIASES=("co=checkout" "br=branch" "ci=commit" "st=status" "lg=log --oneline --graph --decorate --all")

# -----------------------------
# Global .gitignore
# -----------------------------

# Set up a global .gitignore file
SET_GLOBAL_GITIGNORE="yes"
# Path for the global .gitignore file
GITIGNORE_PATH="$HOME/.gitignore_global"

# -----------------------------
# Merge Tool Configuration
# -----------------------------

# Set up a default merge tool
SET_MERGE_TOOL="yes"
# Preferred merge tool (meld, kdiff3, vimdiff, bc, etc.)
MERGE_TOOL_CHOICE="meld"

# -----------------------------
# GPG Commit Signing
# -----------------------------

# Enable GPG commit signing
ENABLE_GPG_SIGNING="no"
# GPG key ID for signing commits (if ENABLE_GPG_SIGNING is 'yes')
GPG_KEY=""

# -----------------------------
# Git Performance Optimization
# -----------------------------

# Optimize Git performance settings
OPTIMIZE_GIT_PERFORMANCE="yes"

# -----------------------------
# Credential Helper
# -----------------------------

# Set up a Git credential helper
SET_CREDENTIAL_HELPER="yes"
# Preferred credential helper (cache, store, osxkeychain, wincred)
CREDENTIAL_HELPER_CHOICE="cache"

# -----------------------------
# Rebase Auto Stash
# -----------------------------

# Enable automatic stashing during rebases
ENABLE_REBASE_AUTO_STASH="yes"

# -----------------------------
# Customize Git's Pager
# -----------------------------

# Customize Git's pager settings
CUSTOMIZE_GIT_PAGER="yes"

# -----------------------------
# Commit Message Template
# -----------------------------

# Set up a commit message template
SET_COMMIT_TEMPLATE="yes"
# Path for the commit message template file
COMMIT_TEMPLATE_PATH="$HOME/.git_commit_template.txt"

# -----------------------------
# SSH Key Generation
# -----------------------------

# Generate a new SSH key if none exists
GENERATE_SSH_KEY="yes"
# SSH key type ('rsa' or 'ed25519')
SSH_KEY_TYPE="ed25519"
# SSH key comment (usually your email)
SSH_KEY_COMMENT="your.email@example.com"
# SSH key passphrase (leave empty for no passphrase)
SSH_KEY_PASSPHRASE=""

# -----------------------------
# Additional Software Packages
# -----------------------------

# Install additional packages (comma-separated list)
ADDITIONAL_PACKAGES=("git-lfs")

# -----------------------------
# Proxy Settings (if applicable)
# -----------------------------

# Set proxy settings for network operations (if behind a proxy)
# PROXY_SETTINGS="http://proxy.example.com:8080"

# -----------------------------
# Logging and Dry-Run Mode
# -----------------------------

# Log output to a specified file (uncomment to enable logging)
# LOG_FILE="$HOME/git_setup.log"

# Enable dry-run mode to simulate actions without making changes
DRY_RUN_MODE="no"

# -----------------------------
# Non-Interactive Mode
# -----------------------------

# Set non-interactive mode (should be 'yes' when using this config file)
NON_INTERACTIVE_MODE="yes"

